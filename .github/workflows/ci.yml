name: Python Application CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      # Define any services your application needs, like databases
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: mydb
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: 3.10

    - name: Install Poetry
      run: pip install poetry

    - name: Install dependencies
      run: poetry install

    - name: Run tests
      run: poetry run pytest

    - name: Build Docker Image
      run: docker build -t my-python-app .

    - name: Run Docker Image
      run: |
        docker run -d --name myapp -e POSTGRES_USER=user -e POSTGRES_PASSWORD=password -e POSTGRES_DB=mydb --network host my-python-app
        sleep 10
        docker logs myapp

    - name: Clean up
      if: always()
      run: docker stop myapp && docker rm myapp
